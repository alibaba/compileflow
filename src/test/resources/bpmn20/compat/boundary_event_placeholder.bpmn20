<?xml version="1.0" encoding="UTF-8"?>
<!--
  注意：boundaryEvent 仅做占位，compileflow 不执行异步/补偿/定时/信号/消息等事件
-->
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:cf="http://compileflow.alibaba.com"
             targetNamespace="http://example.com/compileflow">
  <process id="boundary_event_placeholder" name="Boundary Event Placeholder" isExecutable="true">
    <extensionElements>
      <cf:var name="serviceTask1Result" description="服务任务结果" dataType="java.lang.Integer" inOutType="return"/>
    </extensionElements>
    <startEvent id="start" name="Start"/>
    <sequenceFlow id="flow1" sourceRef="start" targetRef="serviceTask1"/>
    <serviceTask id="serviceTask1" name="Service Task"
                 cf:type="java"
                 cf:class="com.alibaba.compileflow.engine.process.mock.MockJavaClazz"
                 cf:method="add">
      <extensionElements>
        <cf:var name="a" dataType="java.lang.Integer" contextVarName="a" inOutType="param"/>
        <cf:var name="b" dataType="java.lang.Integer" contextVarName="b" inOutType="param"/>
        <cf:var name="result" dataType="java.lang.Integer" contextVarName="serviceTask1Result" inOutType="return"/>
      </extensionElements>
    </serviceTask>
    <!-- 仅占位，不参与执行 -->
    <boundaryEvent id="boundary1" attachedToRef="serviceTask1"/>
    <sequenceFlow id="flow2" sourceRef="serviceTask1" targetRef="end"/>
    <endEvent id="end" name="End"/>
  </process>
</definitions> 